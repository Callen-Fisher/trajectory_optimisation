function Hes = pogo_objective_Hes(x,auxdata,lambda)
% 
% Wrapper file generated by ADiGator
% ©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

global ADiGator_pogo_nonlcon_ADiGatorHes
gx.f = x;
gx.dx = ones(168,1);
obj = pogo_objective_ADiGatorHes(gx,auxdata);
objHes = sparse(obj.dxdx_location(:,1),obj.dxdx_location(:,2),obj.dxdx,168,168);
[con, coneq] = pogo_nonlcon_ADiGatorHes(gx,auxdata);
HesData1 = ADiGator_pogo_nonlcon_ADiGatorHes.pogo_nonlcon_ADiGatorHes.Gator2Data.HesData1;
conHesnz = lambda.ineqnonlin.'*sparse(con.dxdx_location(:,1),HesData1,con.dxdx,4499,273);
HesData2 = ADiGator_pogo_nonlcon_ADiGatorHes.pogo_nonlcon_ADiGatorHes.Gator2Data.HesData2;
conHes = sparse(HesData2(:,1),HesData2(:,2),conHesnz,168,168);
HesData3 = ADiGator_pogo_nonlcon_ADiGatorHes.pogo_nonlcon_ADiGatorHes.Gator2Data.HesData3;
coneqHesnz = lambda.eqnonlin.'*sparse(coneq.dxdx_location(:,1),HesData3,coneq.dxdx,139,273);
HesData4 = ADiGator_pogo_nonlcon_ADiGatorHes.pogo_nonlcon_ADiGatorHes.Gator2Data.HesData4;
coneqHes = sparse(HesData4(:,1),HesData4(:,2),coneqHesnz,168,168);
Hes = objHes+conHes+coneqHes;
Hes = (Hes+Hes.')/2;