% This code was generated using ADiGator version 1.2
% ©2010-2014 Matthew J. Weinstein and Anil V. Rao
% ADiGator may be obtained at https://sourceforge.net/projects/adigator/ 
% Contact: mweinstein@ufl.edu
% Bugs/suggestions may be reported to the sourceforge forums
%                    DISCLAIMER
% ADiGator is a general-purpose software distributed under the GNU General
% Public License version 3.0. While the software is distributed with the
% hope that it will be useful, both the software and generated code are
% provided 'AS IS' with NO WARRANTIES OF ANY KIND and no merchantability
% or fitness for any purpose or application.

function [c,ceq] = pogo_nonlcon_ADiGatorGrd(DecVar,auxdata)
global ADiGator_pogo_nonlcon_ADiGatorGrd
if isempty(ADiGator_pogo_nonlcon_ADiGatorGrd); ADiGator_LoadData(); end
Gator1Data = ADiGator_pogo_nonlcon_ADiGatorGrd.pogo_nonlcon_ADiGatorGrd.Gator1Data;
% ADiGator Start Derivative Computations
nNodesF1 = auxdata.nNodesF1;
%User Line: nNodesF1=auxdata.nNodesF1;
nNodesS = auxdata.nNodesS;
%User Line: nNodesS=auxdata.nNodesS;
nNodesF2 = auxdata.nNodesF2;
%User Line: nNodesF2=auxdata.nNodesF2;
q_0 = auxdata.q_0;
%User Line: q_0=auxdata.q_0;
dq_0 = auxdata.dq_0;
%User Line: dq_0=auxdata.dq_0;
lmin = auxdata.lmin;
%User Line: lmin=auxdata.lmin;
lmax = auxdata.lmax;
%User Line: lmax=auxdata.lmax;
%User Line: %% reshape the DecVar into the three trajectories (flight, stance, flight) with [q,dq,u] order
cada1f1 = nNodesF1*5;
i.f = cada1f1 + 3;
%User Line: i=nNodesF1*5+3;
cada1f1 = 4:i.f;
cada1f2dx = DecVar.dx(Gator1Data.Index220);
cada1f2 = DecVar.f(cada1f1);
cada1f3 = [5 nNodesF1];
traj1.dx = cada1f2dx;
traj1.f = reshape(cada1f2,cada1f3);
%User Line: traj1=reshape(DecVar(4:i),[5,nNodesF1]);
cada1f1 = nNodesS*3;
j.f = i.f + cada1f1;
%User Line: j=i+nNodesS*3;
cada1f1 = i.f + 1;
cada1f2 = cada1f1:j.f;
cada1f3dx = DecVar.dx(Gator1Data.Index221);
cada1f3 = DecVar.f(cada1f2);
cada1f4 = [3 nNodesS];
traj2.dx = cada1f3dx;
traj2.f = reshape(cada1f3,cada1f4);
%User Line: traj2=reshape(DecVar(i+1:j),[3,nNodesS]);
cada1f1 = j.f + 1;
cada1f2 = length(DecVar.f);
cada1f3 = cada1f1:cada1f2;
cada1f4dx = DecVar.dx(Gator1Data.Index222);
cada1f4 = DecVar.f(cada1f3);
cada1f5 = [5 nNodesF2];
traj3.dx = cada1f4dx;
traj3.f = reshape(cada1f4,cada1f5);
%User Line: traj3=reshape(DecVar(j+1:end),[5,nNodesF2]);
%User Line: %% define variables
start_states_F1.f = ones(nNodesF1,4);
%User Line: start_states_F1 = ones(nNodesF1,4);
final_states_F1.f = start_states_F1.f;
%User Line: final_states_F1 = start_states_F1;
start_states_S.f = ones(nNodesS,2);
%User Line: start_states_S = ones(nNodesS,2);
final_states_S.f = start_states_S.f;
%User Line: final_states_S = start_states_S;
start_states_F2.f = ones(nNodesF2,4);
%User Line: start_states_F2 = ones(nNodesF2,4);
final_states_F2.f = start_states_F2.f;
%User Line: final_states_F2 = start_states_F2;
defects.f = [];
%User Line: defects =[];
traj_F1.f = [];
%User Line: traj_F1=[];
traj_S.f = [];
%User Line: traj_S=[];
traj_F2.f = [];
%User Line: traj_F2=[];
cada1f1dx = DecVar.dx(1);
cada1f1 = DecVar.f(1);
Tsample_F1.dx = cada1f1dx./nNodesF1;
Tsample_F1.f = cada1f1/nNodesF1;
%User Line: Tsample_F1 = DecVar(1)/nNodesF1;
cada1f1dx = DecVar.dx(2);
cada1f1 = DecVar.f(2);
Tsample_S.dx = cada1f1dx./nNodesS;
Tsample_S.f = cada1f1/nNodesS;
%User Line: Tsample_S = DecVar(2)/nNodesS;
cada1f1dx = DecVar.dx(3);
cada1f1 = DecVar.f(3);
Tsample_F2.dx = cada1f1dx./nNodesF2;
Tsample_F2.f = cada1f1/nNodesF2;
%User Line: Tsample_F2 = DecVar(3)/nNodesF2;
%User Line: %% FLIGHT 1 and 2
cada1f1 = nNodesF1 - 1;
cadaforvar1.f = 0:1:cada1f1;
%User Line: cadaforvar1 = 0:1:nNodesF1-1;
start_states_F1.dx = zeros(60,1);
final_states_F1.dx = zeros(285,1);
start_states_F2.dx = zeros(60,1);
final_states_F2.dx = zeros(285,1);
traj_F1.dx = zeros(28275,1);
traj_F1.f(1500,4) = 0;
traj_F2.dx = zeros(28275,1);
traj_F2.f(1500,4) = 0;
temp.dx = zeros(22731,1);
temp.f = zeros(100,4);
for cadaforcount1 = 1:15
    i.f = cadaforvar1.f(:,cadaforcount1);
    %User Line: i = cadaforvar1(:,cadaforcount1);
    %User Line: % FLIGHT 1
    cada1f1 = i.f + 1;
    cada1td1 = zeros(15,1);
    cada1td1(logical(Gator1Data.Index1(:,cadaforcount1))) = traj1.dx(nonzeros(Gator1Data.Index1(:,cadaforcount1)));
    u.dx = cada1td1;
    u.f = traj1.f(5,cada1f1);
    %User Line: u = traj1(5,i+1);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(30,1);
    cada1td1(logical(Gator1Data.Index2(:,cadaforcount1))) = traj1.dx(nonzeros(Gator1Data.Index2(:,cadaforcount1)));
    cada1f2dx = cada1td1;
    cada1f2 = traj1.f(Gator1Data.Index223,cada1f1);
    cada1f3dx = cada1f2dx;
    cada1f3 = cada1f2.';
    cada1f4 = i.f + 1;
    cada1td1 = zeros(30,1);
    cada1td1(logical(Gator1Data.Index3(:,cadaforcount1))) = traj1.dx(nonzeros(Gator1Data.Index3(:,cadaforcount1)));
    cada1f5dx = cada1td1;
    cada1f5 = traj1.f(Gator1Data.Index224,cada1f4);
    cada1f6dx = cada1f5dx;
    cada1f6 = cada1f5.';
    cada1td1 = zeros(60,1);
    cada1td1(Gator1Data.Index225) = cada1f3dx;
    cada1td1(Gator1Data.Index226) = cada1f6dx;
    cada1f7dx = cada1td1;
    cada1f7 = [cada1f3 cada1f6];
    cada1f8 = i.f + 1;
    start_states_F1.dx(logical(Gator1Data.Index106(:,cadaforcount1))) = cada1f7dx(nonzeros(Gator1Data.Index106(:,cadaforcount1)));
    start_states_F1.f(cada1f8,:) = cada1f7;
    %User Line: start_states_F1(i+1,:) = [traj1(1:2,i+1)',traj1(3:4,i+1)'];
    %User Line: %run the model
    %User Line: %odefun  = @(t,q)[q(3);q(4);get_ddq(q,u)];
    cada1f1dx = Tsample_F1.dx;
    cada1f1 = Tsample_F1.f - 0;
    cada1tempdx = cada1f1dx(Gator1Data.Index227);
    cada1tf1 = Gator1Data.Data1(Gator1Data.Index229);
    cada1f3dx = cada1tf1(:).*cada1tempdx(Gator1Data.Index228);
    cada1f3 = Gator1Data.Data1*cada1f1;
    cada1f4dx = cada1f3dx./99;
    cada1f4 = cada1f3/99;
    cada1f5dx = cada1f4dx;
    cada1f5 = 0 + cada1f4;
    cada1td1 = zeros(99,1);
    cada1td1(Gator1Data.Index230) = cada1f5dx;
    cada1td1(99) = Tsample_F1.dx;
    tspan.dx = cada1td1;
    tspan.f = [cada1f5 Tsample_F1.f];
    %User Line: tspan=linspace(0,Tsample_F1,100);
    %User Line: %temp=ode4(odefun,tspan,start_states_F1(i+1,:)');
    cada1f1dx = tspan.dx(Gator1Data.Index4);
    cada1f1 = tspan.f(2);
    cada1f2 = tspan.f(1);
    hi.dx = cada1f1dx;
    hi.f = cada1f1 - cada1f2;
    %User Line: hi = tspan(2)-tspan(1);
    cada1f1 = i.f + 1;
    cada1f2 = start_states_F1.f(cada1f1,:);
    cada1f3 = cada1f2.';
    neq.f = 4;
    %User Line: neq = length(start_states_F1(i+1,:)');
    N.f = 100;
    %User Line: N = length(tspan);
    Y.f = zeros(4,100);
    Y.dx = zeros(22731,1);
    %User Line: Y = zeros(neq,N);
    F.f = zeros(4,4);
    F.dx = zeros(796,1);
    %User Line: F = zeros(neq,4);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(60,1);
    cada1td1(logical(Gator1Data.Index5(:,cadaforcount1))) = start_states_F1.dx(nonzeros(Gator1Data.Index5(:,cadaforcount1)));
    cada1f2dx = cada1td1;
    cada1f2 = start_states_F1.f(cada1f1,:);
    cada1f3dx = cada1f2dx;
    cada1f3 = cada1f2.';
    Y.dx(logical(Gator1Data.Index107)) = cada1f3dx(nonzeros(Gator1Data.Index107));
    Y.f(:,1) = cada1f3;
    %User Line: Y(:,1) = start_states_F1(i+1,:)';
    cadaforvar2.f = 2:N.f;
    %User Line: cadaforvar2 = 2:N;
    for cadaforcount2 = 1:99
        j.f = cadaforvar2.f(:,cadaforcount2);
        %User Line: j = cadaforvar2(:,cadaforcount2);
        cada1f1 = j.f - 1;
        cada1td1 = zeros(229,1);
        cada1td1(logical(Gator1Data.Index14(:,cadaforcount2))) = Y.dx(nonzeros(Gator1Data.Index14(:,cadaforcount2)));
        yi.dx = cada1td1;
        yi.f = Y.f(:,cada1f1);
        %User Line: yi = Y(:,j-1);
        cadainput2_1.dx = yi.dx;         cadainput2_1.f = yi.f;
        %User Line: cadainput2_1 = yi;
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index231,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index232,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index233,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index15);
        cada1f1 = yi.f(3);
        F.dx(logical(Gator1Data.Index113)) = cada1f1dx(nonzeros(Gator1Data.Index113));
        F.f(1,1) = cada1f1;
        %User Line: F(1,1) = yi(3);
        cada1f1dx = yi.dx(Gator1Data.Index16);
        cada1f1 = yi.f(4);
        F.dx(logical(Gator1Data.Index114)) = cada1f1dx(nonzeros(Gator1Data.Index114));
        F.f(2,1) = cada1f1;
        %User Line: F(2,1) = yi(4);
        cada1f1dx = tempVar.dx(Gator1Data.Index17);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index115)) = cada1f1dx(nonzeros(Gator1Data.Index115));
        F.f(3,1) = cada1f1;
        %User Line: F(3,1) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index18);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index116)) = cada1f1dx(nonzeros(Gator1Data.Index116));
        F.f(4,1) = cada1f1;
        %User Line: F(4,1) = tempVar(2);
        cada1f2dx = 0.5.*hi.dx;
        cada1f2 = 0.5*hi.f;
        cada1f3dx = F.dx(Gator1Data.Index19);
        cada1f3 = F.f(:,1);
        cada1tempdx = cada1f2dx(Gator1Data.Index234);
        cada1td1 = zeros(199,1);
        cada1td1(Gator1Data.Index235) = cada1f3(:).*cada1tempdx;
        cada1td1 = cada1td1 + cada1f2.*cada1f3dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f2*cada1f3;
        cada1td1 = yi.dx;
        cada1td1(Gator1Data.Index236) = cada1td1(Gator1Data.Index236) + cada1f5dx;
        cadainput2_1.dx = cada1td1;
        cadainput2_1.f = yi.f + cada1f5;
        %User Line: cadainput2_1 = (yi+0.5*hi*F(:,1));
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index237,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index238,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index239,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index20);
        cada1f1 = yi.f(3);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index21);
        cada1f4 = F.f(3,1);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index240) = cada1td1(Gator1Data.Index240) + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index117)) = cada1f7dx(nonzeros(Gator1Data.Index117));
        F.f(1,2) = cada1f7;
        %User Line: F(1,2) = yi(3)+0.5*hi*F(3,1);
        cada1f1dx = yi.dx(Gator1Data.Index22);
        cada1f1 = yi.f(4);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index23);
        cada1f4 = F.f(4,1);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index118)) = cada1f7dx(nonzeros(Gator1Data.Index118));
        F.f(2,2) = cada1f7;
        %User Line: F(2,2) = yi(4)+0.5*hi*F(4,1);
        cada1f1dx = tempVar.dx(Gator1Data.Index24);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index119)) = cada1f1dx(nonzeros(Gator1Data.Index119));
        F.f(3,2) = cada1f1;
        %User Line: F(3,2) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index25);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index120)) = cada1f1dx(nonzeros(Gator1Data.Index120));
        F.f(4,2) = cada1f1;
        %User Line: F(4,2) = tempVar(2);
        cada1f2dx = 0.5.*hi.dx;
        cada1f2 = 0.5*hi.f;
        cada1f3dx = F.dx(Gator1Data.Index26);
        cada1f3 = F.f(:,2);
        cada1tempdx = cada1f2dx(Gator1Data.Index241);
        cada1td1 = zeros(199,1);
        cada1td1(Gator1Data.Index242) = cada1f3(:).*cada1tempdx;
        cada1td1 = cada1td1 + cada1f2.*cada1f3dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f2*cada1f3;
        cada1td1 = yi.dx;
        cada1td1(Gator1Data.Index243) = cada1td1(Gator1Data.Index243) + cada1f5dx;
        cadainput2_1.dx = cada1td1;
        cadainput2_1.f = yi.f + cada1f5;
        %User Line: cadainput2_1 = yi+0.5*hi*F(:,2);
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index244,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index245,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index246,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index27);
        cada1f1 = yi.f(3);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index28);
        cada1f4 = F.f(3,2);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index247) = cada1td1(Gator1Data.Index247) + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index121)) = cada1f7dx(nonzeros(Gator1Data.Index121));
        F.f(1,3) = cada1f7;
        %User Line: F(1,3) = yi(3)+0.5*hi*F(3,2);
        cada1f1dx = yi.dx(Gator1Data.Index29);
        cada1f1 = yi.f(4);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index30);
        cada1f4 = F.f(4,2);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index122)) = cada1f7dx(nonzeros(Gator1Data.Index122));
        F.f(2,3) = cada1f7;
        %User Line: F(2,3) = yi(4)+0.5*hi*F(4,2);
        cada1f1dx = tempVar.dx(Gator1Data.Index31);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index123)) = cada1f1dx(nonzeros(Gator1Data.Index123));
        F.f(3,3) = cada1f1;
        %User Line: F(3,3) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index32);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index124)) = cada1f1dx(nonzeros(Gator1Data.Index124));
        F.f(4,3) = cada1f1;
        %User Line: F(4,3) = tempVar(2);
        cada1f1dx = F.dx(Gator1Data.Index33);
        cada1f1 = F.f(:,3);
        cada1tempdx = hi.dx(Gator1Data.Index248);
        cada1td1 = zeros(199,1);
        cada1td1(Gator1Data.Index249) = cada1f1(:).*cada1tempdx;
        cada1td1 = cada1td1 + hi.f.*cada1f1dx;
        cada1f3dx = cada1td1;
        cada1f3 = hi.f*cada1f1;
        cada1td1 = yi.dx;
        cada1td1(Gator1Data.Index250) = cada1td1(Gator1Data.Index250) + cada1f3dx;
        cadainput2_1.dx = cada1td1;
        cadainput2_1.f = yi.f + cada1f3;
        %User Line: cadainput2_1 = yi+hi*F(:,3);
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index251,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index252,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index253,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index34);
        cada1f1 = yi.f(3);
        cada1f2dx = F.dx(Gator1Data.Index35);
        cada1f2 = F.f(3,3);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f2.*hi.dx;
        cada1td1 = cada1td1 + hi.f.*cada1f2dx;
        cada1f4dx = cada1td1;
        cada1f4 = hi.f*cada1f2;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index254) = cada1td1(Gator1Data.Index254) + cada1f4dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f1 + cada1f4;
        F.dx(logical(Gator1Data.Index125)) = cada1f5dx(nonzeros(Gator1Data.Index125));
        F.f(1,4) = cada1f5;
        %User Line: F(1,4) = yi(3)+hi*F(3,3);
        cada1f1dx = yi.dx(Gator1Data.Index36);
        cada1f1 = yi.f(4);
        cada1f2dx = F.dx(Gator1Data.Index37);
        cada1f2 = F.f(4,3);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f2.*hi.dx;
        cada1td1 = cada1td1 + hi.f.*cada1f2dx;
        cada1f4dx = cada1td1;
        cada1f4 = hi.f*cada1f2;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f4dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f1 + cada1f4;
        F.dx(logical(Gator1Data.Index126)) = cada1f5dx(nonzeros(Gator1Data.Index126));
        F.f(2,4) = cada1f5;
        %User Line: F(2,4) = yi(4)+hi*F(4,3);
        cada1f1dx = tempVar.dx(Gator1Data.Index38);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index127)) = cada1f1dx(nonzeros(Gator1Data.Index127));
        F.f(3,4) = cada1f1;
        %User Line: F(3,4) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index39);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index128)) = cada1f1dx(nonzeros(Gator1Data.Index128));
        F.f(4,4) = cada1f1;
        %User Line: F(4,4) = tempVar(2);
        cada1f1dx = yi.dx(Gator1Data.Index40);
        cada1f1 = yi.f(1);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index41);
        cada1f3 = F.f(1,1);
        cada1f4dx = F.dx(Gator1Data.Index42);
        cada1f4 = F.f(1,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index43);
        cada1f8 = F.f(1,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index44);
        cada1f12 = F.f(1,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(61,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index255) = cada1td1(Gator1Data.Index255) + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index129(:,cadaforcount2))) = cada1f16dx(nonzeros(Gator1Data.Index129(:,cadaforcount2)));
        Y.f(1,j.f) = cada1f16;
        %User Line: Y(1,j) = yi(1) + (hi/6)*(F(1,1) + 2*F(1,2) + 2*F(1,3) + F(1,4));
        cada1f1dx = yi.dx(Gator1Data.Index45);
        cada1f1 = yi.f(2);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index46);
        cada1f3 = F.f(2,1);
        cada1f4dx = F.dx(Gator1Data.Index47);
        cada1f4 = F.f(2,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index48);
        cada1f8 = F.f(2,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index49);
        cada1f12 = F.f(2,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index130(:,cadaforcount2))) = cada1f16dx(nonzeros(Gator1Data.Index130(:,cadaforcount2)));
        Y.f(2,j.f) = cada1f16;
        %User Line: Y(2,j) = yi(2) + (hi/6)*(F(2,1) + 2*F(2,2) + 2*F(2,3) + F(2,4));
        cada1f1dx = yi.dx(Gator1Data.Index50);
        cada1f1 = yi.f(3);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index51);
        cada1f3 = F.f(3,1);
        cada1f4dx = F.dx(Gator1Data.Index52);
        cada1f4 = F.f(3,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index53);
        cada1f8 = F.f(3,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index54);
        cada1f12 = F.f(3,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index256) = cada1td1(Gator1Data.Index256) + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index131(:,cadaforcount2))) = cada1f16dx(nonzeros(Gator1Data.Index131(:,cadaforcount2)));
        Y.f(3,j.f) = cada1f16;
        %User Line: Y(3,j) = yi(3) + (hi/6)*(F(3,1) + 2*F(3,2) + 2*F(3,3) + F(3,4));
        cada1f1dx = yi.dx(Gator1Data.Index55);
        cada1f1 = yi.f(4);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index56);
        cada1f3 = F.f(4,1);
        cada1f4dx = F.dx(Gator1Data.Index57);
        cada1f4 = F.f(4,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index58);
        cada1f8 = F.f(4,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index59);
        cada1f12 = F.f(4,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index132(:,cadaforcount2))) = cada1f16dx(nonzeros(Gator1Data.Index132(:,cadaforcount2)));
        Y.f(4,j.f) = cada1f16;
        %User Line: Y(4,j) = yi(4) + (hi/6)*(F(4,1) + 2*F(4,2) + 2*F(4,3) + F(4,4));
    end
    cada1f1dx = Y.dx(Gator1Data.Index6);
    cada1f1 = Y.f(:,:);
    cada1f2dx = cada1f1dx(Gator1Data.Index257);
    cada1f2 = cada1f1.';
    temp.dx = cada1f2dx(Gator1Data.Index108);
    temp.f(:,:) = cada1f2;
    %User Line: temp(:,:) =Y(:,:).';
    %User Line: %save the results
    cada1td1 = zeros(28275,1);
    cada1td1(logical(Gator1Data.Index153(:,cadaforcount1))) = traj_F1.dx(nonzeros(Gator1Data.Index153(:,cadaforcount1)));
    cada1td1(logical(Gator1Data.Index154(:,cadaforcount1))) = temp.dx(nonzeros(Gator1Data.Index154(:,cadaforcount1)));
    traj_F1.dx = cada1td1;
    cada1tempf1 = [traj_F1.f(1:Gator1Data.Index155(cadaforcount1),:);temp.f];
    traj_F1.f = zeros(1500,4);
    traj_F1.f(1:size(cada1tempf1,1),:) = cada1tempf1;
    %User Line: traj_F1=[traj_F1;temp];
    cada1f1 = 100;
    cada1f2dx = temp.dx(Gator1Data.Index7);
    cada1f2 = temp.f(cada1f1,:);
    cada1f3 = i.f + 1;
    final_states_F1.dx(logical(Gator1Data.Index109(:,cadaforcount1))) = cada1f2dx(nonzeros(Gator1Data.Index109(:,cadaforcount1)));
    final_states_F1.f(cada1f3,:) = cada1f2;
    %User Line: final_states_F1(i+1,:) = temp(end,:);
    %User Line: %FLIGHT 2
    cada1f1 = i.f + 1;
    cada1td1 = zeros(15,1);
    cada1td1(logical(Gator1Data.Index8(:,cadaforcount1))) = traj3.dx(nonzeros(Gator1Data.Index8(:,cadaforcount1)));
    u.dx = cada1td1;
    u.f = traj3.f(5,cada1f1);
    %User Line: u =traj3(5,i+1);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(30,1);
    cada1td1(logical(Gator1Data.Index9(:,cadaforcount1))) = traj3.dx(nonzeros(Gator1Data.Index9(:,cadaforcount1)));
    cada1f2dx = cada1td1;
    cada1f2 = traj3.f(Gator1Data.Index258,cada1f1);
    cada1f3dx = cada1f2dx;
    cada1f3 = cada1f2.';
    cada1f4 = i.f + 1;
    cada1td1 = zeros(30,1);
    cada1td1(logical(Gator1Data.Index10(:,cadaforcount1))) = traj3.dx(nonzeros(Gator1Data.Index10(:,cadaforcount1)));
    cada1f5dx = cada1td1;
    cada1f5 = traj3.f(Gator1Data.Index259,cada1f4);
    cada1f6dx = cada1f5dx;
    cada1f6 = cada1f5.';
    cada1td1 = zeros(60,1);
    cada1td1(Gator1Data.Index260) = cada1f3dx;
    cada1td1(Gator1Data.Index261) = cada1f6dx;
    cada1f7dx = cada1td1;
    cada1f7 = [cada1f3 cada1f6];
    cada1f8 = i.f + 1;
    start_states_F2.dx(logical(Gator1Data.Index110(:,cadaforcount1))) = cada1f7dx(nonzeros(Gator1Data.Index110(:,cadaforcount1)));
    start_states_F2.f(cada1f8,:) = cada1f7;
    %User Line: start_states_F2(i+1,:) = [traj3(1:2,i+1)',traj3(3:4,i+1)'];
    %User Line: %run the model
    %User Line: %odefun  = @(t,q)[q(3);q(4);get_ddq(q,u)];
    cada1f1dx = Tsample_F2.dx;
    cada1f1 = Tsample_F2.f - 0;
    cada1tempdx = cada1f1dx(Gator1Data.Index262);
    cada1tf1 = Gator1Data.Data2(Gator1Data.Index264);
    cada1f3dx = cada1tf1(:).*cada1tempdx(Gator1Data.Index263);
    cada1f3 = Gator1Data.Data2*cada1f1;
    cada1f4dx = cada1f3dx./99;
    cada1f4 = cada1f3/99;
    cada1f5dx = cada1f4dx;
    cada1f5 = 0 + cada1f4;
    cada1td1 = zeros(99,1);
    cada1td1(Gator1Data.Index265) = cada1f5dx;
    cada1td1(99) = Tsample_F2.dx;
    tspan.dx = cada1td1;
    tspan.f = [cada1f5 Tsample_F2.f];
    %User Line: tspan=linspace(0,Tsample_F2,100);
    %User Line: %temp=ode4(odefun,tspan,start_states_F2(i+1,:)');
    cada1f1dx = tspan.dx(Gator1Data.Index11);
    cada1f1 = tspan.f(2);
    cada1f2 = tspan.f(1);
    hi.dx = cada1f1dx;
    hi.f = cada1f1 - cada1f2;
    %User Line: hi = tspan(2)-tspan(1);
    cada1f1 = i.f + 1;
    cada1f2 = start_states_F2.f(cada1f1,:);
    cada1f3 = cada1f2.';
    neq.f = 4;
    %User Line: neq = length(start_states_F2(i+1,:)');
    N.f = 100;
    %User Line: N = length(tspan);
    Y.f = zeros(4,100);
    Y.dx = zeros(22731,1);
    %User Line: Y = zeros(neq,N);
    F.f = zeros(4,4);
    F.dx = zeros(796,1);
    %User Line: F = zeros(neq,4);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(60,1);
    cada1td1(logical(Gator1Data.Index12(:,cadaforcount1))) = start_states_F2.dx(nonzeros(Gator1Data.Index12(:,cadaforcount1)));
    cada1f2dx = cada1td1;
    cada1f2 = start_states_F2.f(cada1f1,:);
    cada1f3dx = cada1f2dx;
    cada1f3 = cada1f2.';
    Y.dx(logical(Gator1Data.Index111)) = cada1f3dx(nonzeros(Gator1Data.Index111));
    Y.f(:,1) = cada1f3;
    %User Line: Y(:,1) = start_states_F2(i+1,:)';
    cadaforvar3.f = 2:N.f;
    %User Line: cadaforvar3 = 2:N;
    for cadaforcount3 = 1:99
        j.f = cadaforvar3.f(:,cadaforcount3);
        %User Line: j = cadaforvar3(:,cadaforcount3);
        cada1f1 = j.f - 1;
        cada1td1 = zeros(229,1);
        cada1td1(logical(Gator1Data.Index60(:,cadaforcount3))) = Y.dx(nonzeros(Gator1Data.Index60(:,cadaforcount3)));
        yi.dx = cada1td1;
        yi.f = Y.f(:,cada1f1);
        %User Line: yi = Y(:,j-1);
        cadainput2_1.dx = yi.dx;         cadainput2_1.f = yi.f;
        %User Line: cadainput2_1 = yi;
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index266,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index267,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index268,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index61);
        cada1f1 = yi.f(3);
        F.dx(logical(Gator1Data.Index133)) = cada1f1dx(nonzeros(Gator1Data.Index133));
        F.f(1,1) = cada1f1;
        %User Line: F(1,1) = yi(3);
        cada1f1dx = yi.dx(Gator1Data.Index62);
        cada1f1 = yi.f(4);
        F.dx(logical(Gator1Data.Index134)) = cada1f1dx(nonzeros(Gator1Data.Index134));
        F.f(2,1) = cada1f1;
        %User Line: F(2,1) = yi(4);
        cada1f1dx = tempVar.dx(Gator1Data.Index63);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index135)) = cada1f1dx(nonzeros(Gator1Data.Index135));
        F.f(3,1) = cada1f1;
        %User Line: F(3,1) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index64);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index136)) = cada1f1dx(nonzeros(Gator1Data.Index136));
        F.f(4,1) = cada1f1;
        %User Line: F(4,1) = tempVar(2);
        %User Line: %yi+0.5*hi*F(:,1)
        cada1f2dx = 0.5.*hi.dx;
        cada1f2 = 0.5*hi.f;
        cada1f3dx = F.dx(Gator1Data.Index65);
        cada1f3 = F.f(:,1);
        cada1tempdx = cada1f2dx(Gator1Data.Index269);
        cada1td1 = zeros(199,1);
        cada1td1(Gator1Data.Index270) = cada1f3(:).*cada1tempdx;
        cada1td1 = cada1td1 + cada1f2.*cada1f3dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f2*cada1f3;
        cada1td1 = yi.dx;
        cada1td1(Gator1Data.Index271) = cada1td1(Gator1Data.Index271) + cada1f5dx;
        cadainput2_1.dx = cada1td1;
        cadainput2_1.f = yi.f + cada1f5;
        %User Line: cadainput2_1 = yi+0.5*hi*F(:,1);
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index272,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index273,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index274,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index66);
        cada1f1 = yi.f(3);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index67);
        cada1f4 = F.f(3,1);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index275) = cada1td1(Gator1Data.Index275) + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index137)) = cada1f7dx(nonzeros(Gator1Data.Index137));
        F.f(1,2) = cada1f7;
        %User Line: F(1,2) = yi(3)+0.5*hi*F(3,1);
        cada1f1dx = yi.dx(Gator1Data.Index68);
        cada1f1 = yi.f(4);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index69);
        cada1f4 = F.f(4,1);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index138)) = cada1f7dx(nonzeros(Gator1Data.Index138));
        F.f(2,2) = cada1f7;
        %User Line: F(2,2) = yi(4)+0.5*hi*F(4,1);
        cada1f1dx = tempVar.dx(Gator1Data.Index70);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index139)) = cada1f1dx(nonzeros(Gator1Data.Index139));
        F.f(3,2) = cada1f1;
        %User Line: F(3,2) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index71);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index140)) = cada1f1dx(nonzeros(Gator1Data.Index140));
        F.f(4,2) = cada1f1;
        %User Line: F(4,2) = tempVar(2);
        %User Line: %yi+0.5*hi*F(:,2)
        cada1f2dx = 0.5.*hi.dx;
        cada1f2 = 0.5*hi.f;
        cada1f3dx = F.dx(Gator1Data.Index72);
        cada1f3 = F.f(:,2);
        cada1tempdx = cada1f2dx(Gator1Data.Index276);
        cada1td1 = zeros(199,1);
        cada1td1(Gator1Data.Index277) = cada1f3(:).*cada1tempdx;
        cada1td1 = cada1td1 + cada1f2.*cada1f3dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f2*cada1f3;
        cada1td1 = yi.dx;
        cada1td1(Gator1Data.Index278) = cada1td1(Gator1Data.Index278) + cada1f5dx;
        cadainput2_1.dx = cada1td1;
        cadainput2_1.f = yi.f + cada1f5;
        %User Line: cadainput2_1 = yi+0.5*hi*F(:,2);
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index279,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index280,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index281,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index73);
        cada1f1 = yi.f(3);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index74);
        cada1f4 = F.f(3,2);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index282) = cada1td1(Gator1Data.Index282) + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index141)) = cada1f7dx(nonzeros(Gator1Data.Index141));
        F.f(1,3) = cada1f7;
        %User Line: F(1,3) = yi(3)+0.5*hi*F(3,2);
        cada1f1dx = yi.dx(Gator1Data.Index75);
        cada1f1 = yi.f(4);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index76);
        cada1f4 = F.f(4,2);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index142)) = cada1f7dx(nonzeros(Gator1Data.Index142));
        F.f(2,3) = cada1f7;
        %User Line: F(2,3) = yi(4)+0.5*hi*F(4,2);
        cada1f1dx = tempVar.dx(Gator1Data.Index77);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index143)) = cada1f1dx(nonzeros(Gator1Data.Index143));
        F.f(3,3) = cada1f1;
        %User Line: F(3,3) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index78);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index144)) = cada1f1dx(nonzeros(Gator1Data.Index144));
        F.f(4,3) = cada1f1;
        %User Line: F(4,3) = tempVar(2);
        %User Line: %yi+hi*F(:,3)
        cada1f1dx = F.dx(Gator1Data.Index79);
        cada1f1 = F.f(:,3);
        cada1tempdx = hi.dx(Gator1Data.Index283);
        cada1td1 = zeros(199,1);
        cada1td1(Gator1Data.Index284) = cada1f1(:).*cada1tempdx;
        cada1td1 = cada1td1 + hi.f.*cada1f1dx;
        cada1f3dx = cada1td1;
        cada1f3 = hi.f*cada1f1;
        cada1td1 = yi.dx;
        cada1td1(Gator1Data.Index285) = cada1td1(Gator1Data.Index285) + cada1f3dx;
        cadainput2_1.dx = cada1td1;
        cadainput2_1.f = yi.f + cada1f3;
        %User Line: cadainput2_1 = yi+hi*F(:,3);
        cadainput2_2.dx = u.dx;         cadainput2_2.f = u.f;
        %User Line: cadainput2_2 = u;
        cada1tempdx = cadainput2_1.dx;
        cadainput2_1.dx = zeros(458,1);
        cadainput2_1.dx(Gator1Data.Index286,1) = cada1tempdx;
        cada1tempdx = cadainput2_2.dx;
        cadainput2_2.dx = zeros(30,1);
        cadainput2_2.dx(Gator1Data.Index287,1) = cada1tempdx;
        cadaoutput2_1 = ADiGator_get_ddq(cadainput2_1,cadainput2_2);
        % Call to function: get_ddq
        cadaoutput2_1.dx = cadaoutput2_1.dx(Gator1Data.Index288,1);
        tempVar.dx = cadaoutput2_1.dx;         tempVar.f = cadaoutput2_1.f;
        %User Line: tempVar=cadaoutput2_1;
        cada1f1dx = yi.dx(Gator1Data.Index80);
        cada1f1 = yi.f(3);
        cada1f2dx = F.dx(Gator1Data.Index81);
        cada1f2 = F.f(3,3);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f2.*hi.dx;
        cada1td1 = cada1td1 + hi.f.*cada1f2dx;
        cada1f4dx = cada1td1;
        cada1f4 = hi.f*cada1f2;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index289) = cada1td1(Gator1Data.Index289) + cada1f4dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f1 + cada1f4;
        F.dx(logical(Gator1Data.Index145)) = cada1f5dx(nonzeros(Gator1Data.Index145));
        F.f(1,4) = cada1f5;
        %User Line: F(1,4) = yi(3)+hi*F(3,3);
        cada1f1dx = yi.dx(Gator1Data.Index82);
        cada1f1 = yi.f(4);
        cada1f2dx = F.dx(Gator1Data.Index83);
        cada1f2 = F.f(4,3);
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f2.*hi.dx;
        cada1td1 = cada1td1 + hi.f.*cada1f2dx;
        cada1f4dx = cada1td1;
        cada1f4 = hi.f*cada1f2;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f4dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f1 + cada1f4;
        F.dx(logical(Gator1Data.Index146)) = cada1f5dx(nonzeros(Gator1Data.Index146));
        F.f(2,4) = cada1f5;
        %User Line: F(2,4) = yi(4)+hi*F(4,3);
        cada1f1dx = tempVar.dx(Gator1Data.Index84);
        cada1f1 = tempVar.f(1);
        F.dx(logical(Gator1Data.Index147)) = cada1f1dx(nonzeros(Gator1Data.Index147));
        F.f(3,4) = cada1f1;
        %User Line: F(3,4) = tempVar(1);
        cada1f1dx = tempVar.dx(Gator1Data.Index85);
        cada1f1 = tempVar.f(2);
        F.dx(logical(Gator1Data.Index148)) = cada1f1dx(nonzeros(Gator1Data.Index148));
        F.f(4,4) = cada1f1;
        %User Line: F(4,4) = tempVar(2);
        cada1f1dx = yi.dx(Gator1Data.Index86);
        cada1f1 = yi.f(1);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index87);
        cada1f3 = F.f(1,1);
        cada1f4dx = F.dx(Gator1Data.Index88);
        cada1f4 = F.f(1,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index89);
        cada1f8 = F.f(1,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index90);
        cada1f12 = F.f(1,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(61,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index290) = cada1td1(Gator1Data.Index290) + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index149(:,cadaforcount3))) = cada1f16dx(nonzeros(Gator1Data.Index149(:,cadaforcount3)));
        Y.f(1,j.f) = cada1f16;
        %User Line: Y(1,j) = yi(1) + (hi/6)*(F(1,1) + 2*F(1,2) + 2*F(1,3) + F(1,4));
        cada1f1dx = yi.dx(Gator1Data.Index91);
        cada1f1 = yi.f(2);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index92);
        cada1f3 = F.f(2,1);
        cada1f4dx = F.dx(Gator1Data.Index93);
        cada1f4 = F.f(2,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index94);
        cada1f8 = F.f(2,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index95);
        cada1f12 = F.f(2,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index150(:,cadaforcount3))) = cada1f16dx(nonzeros(Gator1Data.Index150(:,cadaforcount3)));
        Y.f(2,j.f) = cada1f16;
        %User Line: Y(2,j) = yi(2) + (hi/6)*(F(2,1) + 2*F(2,2) + 2*F(2,3) + F(2,4));
        cada1f1dx = yi.dx(Gator1Data.Index96);
        cada1f1 = yi.f(3);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index97);
        cada1f3 = F.f(3,1);
        cada1f4dx = F.dx(Gator1Data.Index98);
        cada1f4 = F.f(3,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index99);
        cada1f8 = F.f(3,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index100);
        cada1f12 = F.f(3,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1(Gator1Data.Index291) = cada1td1(Gator1Data.Index291) + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index151(:,cadaforcount3))) = cada1f16dx(nonzeros(Gator1Data.Index151(:,cadaforcount3)));
        Y.f(3,j.f) = cada1f16;
        %User Line: Y(3,j) = yi(3) + (hi/6)*(F(3,1) + 2*F(3,2) + 2*F(3,3) + F(3,4));
        cada1f1dx = yi.dx(Gator1Data.Index101);
        cada1f1 = yi.f(4);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index102);
        cada1f3 = F.f(4,1);
        cada1f4dx = F.dx(Gator1Data.Index103);
        cada1f4 = F.f(4,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index104);
        cada1f8 = F.f(4,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index105);
        cada1f12 = F.f(4,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(46,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index152(:,cadaforcount3))) = cada1f16dx(nonzeros(Gator1Data.Index152(:,cadaforcount3)));
        Y.f(4,j.f) = cada1f16;
        %User Line: Y(4,j) = yi(4) + (hi/6)*(F(4,1) + 2*F(4,2) + 2*F(4,3) + F(4,4));
    end
    temp.dx = Y.dx(Gator1Data.Index292);
    temp.f = Y.f.';
    %User Line: temp = Y.';
    %User Line: %save the results
    cada1td1 = zeros(28275,1);
    cada1td1(logical(Gator1Data.Index156(:,cadaforcount1))) = traj_F2.dx(nonzeros(Gator1Data.Index156(:,cadaforcount1)));
    cada1td1(logical(Gator1Data.Index157(:,cadaforcount1))) = temp.dx(nonzeros(Gator1Data.Index157(:,cadaforcount1)));
    traj_F2.dx = cada1td1;
    cada1tempf1 = [traj_F2.f(1:Gator1Data.Index158(cadaforcount1),:);temp.f];
    traj_F2.f = zeros(1500,4);
    traj_F2.f(1:size(cada1tempf1,1),:) = cada1tempf1;
    %User Line: traj_F2=[traj_F2;temp];
    cada1f1 = 100;
    cada1f2dx = temp.dx(Gator1Data.Index13);
    cada1f2 = temp.f(cada1f1,:);
    cada1f3 = i.f + 1;
    final_states_F2.dx(logical(Gator1Data.Index112(:,cadaforcount1))) = cada1f2dx(nonzeros(Gator1Data.Index112(:,cadaforcount1)));
    final_states_F2.f(cada1f3,:) = cada1f2;
    %User Line: final_states_F2(i+1,:) = temp(end,:);
end
%User Line: %% STANCE
cada1f1 = nNodesS - 1;
cadaforvar4.f = 0:1:cada1f1;
%User Line: cadaforvar4 = 0:1:nNodesS-1;
start_states_S.dx = zeros(10,1);
final_states_S.dx = zeros(40,1);
traj_S.dx = zeros(3970,1);
traj_S.f(500,2) = 0;
for cadaforcount4 = 1:5
    i.f = cadaforvar4.f(:,cadaforcount4);
    %User Line: i = cadaforvar4(:,cadaforcount4);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(5,1);
    cada1td1(logical(Gator1Data.Index159(:,cadaforcount4))) = traj2.dx(nonzeros(Gator1Data.Index159(:,cadaforcount4)));
    u.dx = cada1td1;
    u.f = traj2.f(3,cada1f1);
    %User Line: u = traj2(3,i+1);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(5,1);
    cada1td1(logical(Gator1Data.Index160(:,cadaforcount4))) = traj2.dx(nonzeros(Gator1Data.Index160(:,cadaforcount4)));
    cada1f2dx = cada1td1;
    cada1f2 = traj2.f(1,cada1f1);
    cada1f3 = i.f + 1;
    cada1td1 = zeros(5,1);
    cada1td1(logical(Gator1Data.Index161(:,cadaforcount4))) = traj2.dx(nonzeros(Gator1Data.Index161(:,cadaforcount4)));
    cada1f4dx = cada1td1;
    cada1f4 = traj2.f(2,cada1f3);
    cada1td1 = zeros(10,1);
    cada1td1(Gator1Data.Index293) = cada1f2dx;
    cada1td1(Gator1Data.Index294) = cada1f4dx;
    cada1f5dx = cada1td1;
    cada1f5 = [cada1f2 cada1f4];
    cada1f6 = i.f + 1;
    start_states_S.dx(logical(Gator1Data.Index186(:,cadaforcount4))) = cada1f5dx(nonzeros(Gator1Data.Index186(:,cadaforcount4)));
    start_states_S.f(cada1f6,:) = cada1f5;
    %User Line: start_states_S(i+1,:) = [traj2(1,i+1),traj2(2,i+1)];
    %User Line: %run the model
    %User Line: %odefun  = @(t,q)[q(2);get_ddqs(q,u)];
    cada1f1dx = Tsample_S.dx;
    cada1f1 = Tsample_S.f - 0;
    cada1tempdx = cada1f1dx(Gator1Data.Index295);
    cada1tf1 = Gator1Data.Data3(Gator1Data.Index297);
    cada1f3dx = cada1tf1(:).*cada1tempdx(Gator1Data.Index296);
    cada1f3 = Gator1Data.Data3*cada1f1;
    cada1f4dx = cada1f3dx./99;
    cada1f4 = cada1f3/99;
    cada1f5dx = cada1f4dx;
    cada1f5 = 0 + cada1f4;
    cada1td1 = zeros(99,1);
    cada1td1(Gator1Data.Index298) = cada1f5dx;
    cada1td1(99) = Tsample_S.dx;
    tspan.dx = cada1td1;
    tspan.f = [cada1f5 Tsample_S.f];
    %User Line: tspan=linspace(0,Tsample_S,100);
    %User Line: %temp=ode4(odefun,tspan,start_states_S(i+1,:)');
    cada1f1dx = tspan.dx(Gator1Data.Index162);
    cada1f1 = tspan.f(2);
    cada1f2 = tspan.f(1);
    hi.dx = cada1f1dx;
    hi.f = cada1f1 - cada1f2;
    %User Line: hi = tspan(2)-tspan(1);
    cada1f1 = i.f + 1;
    cada1f2 = start_states_S.f(cada1f1,:);
    cada1f3 = cada1f2.';
    neq.f = 2;
    %User Line: neq = length(start_states_S(i+1,:)');
    N.f = 100;
    %User Line: N = length(tspan);
    Y.f = zeros(2,100);
    Y.dx = zeros(3178,1);
    %User Line: Y = zeros(neq,N);
    F.f = zeros(2,4);
    F.dx = zeros(128,1);
    %User Line: F = zeros(neq,4);
    cada1f1 = i.f + 1;
    cada1td1 = zeros(10,1);
    cada1td1(logical(Gator1Data.Index163(:,cadaforcount4))) = start_states_S.dx(nonzeros(Gator1Data.Index163(:,cadaforcount4)));
    cada1f2dx = cada1td1;
    cada1f2 = start_states_S.f(cada1f1,:);
    cada1f3dx = cada1f2dx;
    cada1f3 = cada1f2.';
    Y.dx(logical(Gator1Data.Index187)) = cada1f3dx(nonzeros(Gator1Data.Index187));
    Y.f(:,1) = cada1f3;
    %User Line: Y(:,1) = start_states_S(i+1,:)';
    cadaforvar5.f = 2:N.f;
    %User Line: cadaforvar5 = 2:N;
    for cadaforcount5 = 1:99
        j.f = cadaforvar5.f(:,cadaforcount5);
        %User Line: j = cadaforvar5(:,cadaforcount5);
        cada1f1 = j.f - 1;
        cada1td1 = zeros(32,1);
        cada1td1(logical(Gator1Data.Index165(:,cadaforcount5))) = Y.dx(nonzeros(Gator1Data.Index165(:,cadaforcount5)));
        yi.dx = cada1td1;
        yi.f = Y.f(:,cada1f1);
        %User Line: yi = Y(:,j-1);
        cadainput3_1.dx = yi.dx;         cadainput3_1.f = yi.f;
        %User Line: cadainput3_1 = yi;
        cadainput3_2.dx = u.dx;         cadainput3_2.f = u.f;
        %User Line: cadainput3_2 = u;
        cadaoutput3_1 = ADiGator_get_ddqs(cadainput3_1,cadainput3_2);
        % Call to function: get_ddqs
        tempVar.dx = cadaoutput3_1.dx;         tempVar.f = cadaoutput3_1.f;
        %User Line: tempVar=cadaoutput3_1;
        cada1f1dx = yi.dx(Gator1Data.Index166);
        cada1f1 = yi.f(2);
        F.dx(logical(Gator1Data.Index189)) = cada1f1dx(nonzeros(Gator1Data.Index189));
        F.f(1,1) = cada1f1;
        %User Line: F(1,1) = yi(2);
        F.dx(logical(Gator1Data.Index190)) = tempVar.dx(nonzeros(Gator1Data.Index190));
        F.f(2,1) = tempVar.f;
        %User Line: F(2,1) = tempVar;
        %User Line: %yi+0.5*hi*F(:,1)
        cada1f2dx = 0.5.*hi.dx;
        cada1f2 = 0.5*hi.f;
        cada1f3dx = F.dx(Gator1Data.Index167);
        cada1f3 = F.f(:,1);
        cada1tempdx = cada1f2dx(Gator1Data.Index299);
        cada1td1 = zeros(32,1);
        cada1td1(Gator1Data.Index300) = cada1f3(:).*cada1tempdx;
        cada1td1 = cada1td1 + cada1f2.*cada1f3dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f2*cada1f3;
        cada1td1 = yi.dx;
        cada1td1 = cada1td1 + cada1f5dx;
        cadainput3_1.dx = cada1td1;
        cadainput3_1.f = yi.f + cada1f5;
        %User Line: cadainput3_1 = yi+0.5*hi*F(:,1);
        cadainput3_2.dx = u.dx;         cadainput3_2.f = u.f;
        %User Line: cadainput3_2 = u;
        cadaoutput3_1 = ADiGator_get_ddqs(cadainput3_1,cadainput3_2);
        % Call to function: get_ddqs
        tempVar.dx = cadaoutput3_1.dx;         tempVar.f = cadaoutput3_1.f;
        %User Line: tempVar=cadaoutput3_1;
        cada1f1dx = yi.dx(Gator1Data.Index168);
        cada1f1 = yi.f(2);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index169);
        cada1f4 = F.f(2,1);
        cada1td1 = zeros(16,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index191)) = cada1f7dx(nonzeros(Gator1Data.Index191));
        F.f(1,2) = cada1f7;
        %User Line: F(1,2) = yi(2)+0.5*hi*F(2,1);
        F.dx(logical(Gator1Data.Index192)) = tempVar.dx(nonzeros(Gator1Data.Index192));
        F.f(2,2) = tempVar.f;
        %User Line: F(2,2) = tempVar;
        %User Line: %yi+0.5*hi*F(:,2)
        cada1f2dx = 0.5.*hi.dx;
        cada1f2 = 0.5*hi.f;
        cada1f3dx = F.dx(Gator1Data.Index170);
        cada1f3 = F.f(:,2);
        cada1tempdx = cada1f2dx(Gator1Data.Index301);
        cada1td1 = zeros(32,1);
        cada1td1(Gator1Data.Index302) = cada1f3(:).*cada1tempdx;
        cada1td1 = cada1td1 + cada1f2.*cada1f3dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f2*cada1f3;
        cada1td1 = yi.dx;
        cada1td1 = cada1td1 + cada1f5dx;
        cadainput3_1.dx = cada1td1;
        cadainput3_1.f = yi.f + cada1f5;
        %User Line: cadainput3_1 = yi+0.5*hi*F(:,2);
        cadainput3_2.dx = u.dx;         cadainput3_2.f = u.f;
        %User Line: cadainput3_2 = u;
        cadaoutput3_1 = ADiGator_get_ddqs(cadainput3_1,cadainput3_2);
        % Call to function: get_ddqs
        tempVar.dx = cadaoutput3_1.dx;         tempVar.f = cadaoutput3_1.f;
        %User Line: tempVar=cadaoutput3_1;
        cada1f1dx = yi.dx(Gator1Data.Index171);
        cada1f1 = yi.f(2);
        cada1f3dx = 0.5.*hi.dx;
        cada1f3 = 0.5*hi.f;
        cada1f4dx = F.dx(Gator1Data.Index172);
        cada1f4 = F.f(2,2);
        cada1td1 = zeros(16,1);
        cada1td1(1) = cada1f4.*cada1f3dx;
        cada1td1 = cada1td1 + cada1f3.*cada1f4dx;
        cada1f6dx = cada1td1;
        cada1f6 = cada1f3*cada1f4;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f1 + cada1f6;
        F.dx(logical(Gator1Data.Index193)) = cada1f7dx(nonzeros(Gator1Data.Index193));
        F.f(1,3) = cada1f7;
        %User Line: F(1,3) = yi(2)+0.5*hi*F(2,2);
        F.dx(logical(Gator1Data.Index194)) = tempVar.dx(nonzeros(Gator1Data.Index194));
        F.f(2,3) = tempVar.f;
        %User Line: F(2,3) = tempVar;
        %User Line: %yi+hi*F(:,3)
        cada1f1dx = F.dx(Gator1Data.Index173);
        cada1f1 = F.f(:,3);
        cada1tempdx = hi.dx(Gator1Data.Index303);
        cada1td1 = zeros(32,1);
        cada1td1(Gator1Data.Index304) = cada1f1(:).*cada1tempdx;
        cada1td1 = cada1td1 + hi.f.*cada1f1dx;
        cada1f3dx = cada1td1;
        cada1f3 = hi.f*cada1f1;
        cada1td1 = yi.dx;
        cada1td1 = cada1td1 + cada1f3dx;
        cadainput3_1.dx = cada1td1;
        cadainput3_1.f = yi.f + cada1f3;
        %User Line: cadainput3_1 = yi+hi*F(:,3);
        cadainput3_2.dx = u.dx;         cadainput3_2.f = u.f;
        %User Line: cadainput3_2 = u;
        cadaoutput3_1 = ADiGator_get_ddqs(cadainput3_1,cadainput3_2);
        % Call to function: get_ddqs
        tempVar.dx = cadaoutput3_1.dx;         tempVar.f = cadaoutput3_1.f;
        %User Line: tempVar=cadaoutput3_1;
        cada1f1dx = yi.dx(Gator1Data.Index174);
        cada1f1 = yi.f(2);
        cada1f2dx = F.dx(Gator1Data.Index175);
        cada1f2 = F.f(2,3);
        cada1td1 = zeros(16,1);
        cada1td1(1) = cada1f2.*hi.dx;
        cada1td1 = cada1td1 + hi.f.*cada1f2dx;
        cada1f4dx = cada1td1;
        cada1f4 = hi.f*cada1f2;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f4dx;
        cada1f5dx = cada1td1;
        cada1f5 = cada1f1 + cada1f4;
        F.dx(logical(Gator1Data.Index195)) = cada1f5dx(nonzeros(Gator1Data.Index195));
        F.f(1,4) = cada1f5;
        %User Line: F(1,4) = yi(2)+hi*F(2,3);
        F.dx(logical(Gator1Data.Index196)) = tempVar.dx(nonzeros(Gator1Data.Index196));
        F.f(2,4) = tempVar.f;
        %User Line: F(2,4) = tempVar;
        cada1f1dx = yi.dx(Gator1Data.Index176);
        cada1f1 = yi.f(1);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index177);
        cada1f3 = F.f(1,1);
        cada1f4dx = F.dx(Gator1Data.Index178);
        cada1f4 = F.f(1,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index179);
        cada1f8 = F.f(1,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index180);
        cada1f12 = F.f(1,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(16,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index197(:,cadaforcount5))) = cada1f16dx(nonzeros(Gator1Data.Index197(:,cadaforcount5)));
        Y.f(1,j.f) = cada1f16;
        %User Line: Y(1,j) = yi(1) + (hi/6)*(F(1,1) + 2*F(1,2) + 2*F(1,3) + F(1,4));
        cada1f1dx = yi.dx(Gator1Data.Index181);
        cada1f1 = yi.f(2);
        cada1f2dx = hi.dx./6;
        cada1f2 = hi.f/6;
        cada1f3dx = F.dx(Gator1Data.Index182);
        cada1f3 = F.f(2,1);
        cada1f4dx = F.dx(Gator1Data.Index183);
        cada1f4 = F.f(2,2);
        cada1f6dx = 2.*cada1f4dx;
        cada1f6 = 2*cada1f4;
        cada1td1 = cada1f3dx;
        cada1td1 = cada1td1 + cada1f6dx;
        cada1f7dx = cada1td1;
        cada1f7 = cada1f3 + cada1f6;
        cada1f8dx = F.dx(Gator1Data.Index184);
        cada1f8 = F.f(2,3);
        cada1f10dx = 2.*cada1f8dx;
        cada1f10 = 2*cada1f8;
        cada1td1 = cada1f7dx;
        cada1td1 = cada1td1 + cada1f10dx;
        cada1f11dx = cada1td1;
        cada1f11 = cada1f7 + cada1f10;
        cada1f12dx = F.dx(Gator1Data.Index185);
        cada1f12 = F.f(2,4);
        cada1td1 = cada1f11dx;
        cada1td1 = cada1td1 + cada1f12dx;
        cada1f13dx = cada1td1;
        cada1f13 = cada1f11 + cada1f12;
        cada1td1 = zeros(16,1);
        cada1td1(1) = cada1f13.*cada1f2dx;
        cada1td1 = cada1td1 + cada1f2.*cada1f13dx;
        cada1f15dx = cada1td1;
        cada1f15 = cada1f2*cada1f13;
        cada1td1 = cada1f1dx;
        cada1td1 = cada1td1 + cada1f15dx;
        cada1f16dx = cada1td1;
        cada1f16 = cada1f1 + cada1f15;
        Y.dx(logical(Gator1Data.Index198(:,cadaforcount5))) = cada1f16dx(nonzeros(Gator1Data.Index198(:,cadaforcount5)));
        Y.f(2,j.f) = cada1f16;
        %User Line: Y(2,j) = yi(2) + (hi/6)*(F(2,1) + 2*F(2,2) + 2*F(2,3) + F(2,4));
    end
    temp.dx = Y.dx(Gator1Data.Index305);
    temp.f = Y.f.';
    %User Line: temp = Y.';
    %User Line: %save the results
    cada1td1 = zeros(3970,1);
    cada1td1(logical(Gator1Data.Index199(:,cadaforcount4))) = traj_S.dx(nonzeros(Gator1Data.Index199(:,cadaforcount4)));
    cada1td1(logical(Gator1Data.Index200(:,cadaforcount4))) = temp.dx(nonzeros(Gator1Data.Index200(:,cadaforcount4)));
    traj_S.dx = cada1td1;
    cada1tempf1 = [traj_S.f(1:Gator1Data.Index201(cadaforcount4),:);temp.f];
    traj_S.f = zeros(500,2);
    traj_S.f(1:size(cada1tempf1,1),:) = cada1tempf1;
    %User Line: traj_S=[traj_S;temp];
    cada1f1 = 100;
    cada1f2dx = temp.dx(Gator1Data.Index164);
    cada1f2 = temp.f(cada1f1,:);
    cada1f3 = i.f + 1;
    final_states_S.dx(logical(Gator1Data.Index188(:,cadaforcount4))) = cada1f2dx(nonzeros(Gator1Data.Index188(:,cadaforcount4)));
    final_states_S.f(cada1f3,:) = cada1f2;
    %User Line: final_states_S(i+1,:) = temp(end,:);
end
%User Line: %% calculate the defects
cadaforvar6.f = 2:1:nNodesF1;
%User Line: cadaforvar6 = [2:1:nNodesF1];
defects.dx = zeros(644,1);
defects.f(1,112) = 0;
for cadaforcount6 = 1:14
    i.f = cadaforvar6.f(:,cadaforcount6);
    %User Line: i = cadaforvar6(:,cadaforcount6);
    cada1td1 = zeros(56,1);
    cada1td1(logical(Gator1Data.Index202(:,cadaforcount6))) = start_states_F1.dx(nonzeros(Gator1Data.Index202(:,cadaforcount6)));
    cada1f1dx = cada1td1;
    cada1f1 = start_states_F1.f(i.f,:);
    cada1f2 = i.f - 1;
    cada1td1 = zeros(214,1);
    cada1td1(logical(Gator1Data.Index203(:,cadaforcount6))) = final_states_F1.dx(nonzeros(Gator1Data.Index203(:,cadaforcount6)));
    cada1f3dx = cada1td1;
    cada1f3 = final_states_F1.f(cada1f2,:);
    cada1td1 = zeros(218,1);
    cada1td1(Gator1Data.Index306) = cada1f1dx;
    cada1td1(Gator1Data.Index307) = cada1td1(Gator1Data.Index307) + -cada1f3dx;
    cada1f4dx = cada1td1;
    cada1f4 = cada1f1 - cada1f3;
    cada1td1 = zeros(56,1);
    cada1td1(logical(Gator1Data.Index204(:,cadaforcount6))) = start_states_F2.dx(nonzeros(Gator1Data.Index204(:,cadaforcount6)));
    cada1f5dx = cada1td1;
    cada1f5 = start_states_F2.f(i.f,:);
    cada1f6 = i.f - 1;
    cada1td1 = zeros(214,1);
    cada1td1(logical(Gator1Data.Index205(:,cadaforcount6))) = final_states_F2.dx(nonzeros(Gator1Data.Index205(:,cadaforcount6)));
    cada1f7dx = cada1td1;
    cada1f7 = final_states_F2.f(cada1f6,:);
    cada1td1 = zeros(218,1);
    cada1td1(Gator1Data.Index308) = cada1f5dx;
    cada1td1(Gator1Data.Index309) = cada1td1(Gator1Data.Index309) + -cada1f7dx;
    cada1f8dx = cada1td1;
    cada1f8 = cada1f5 - cada1f7;
    defects.dx = defects.dx(Gator1Data.Index310,1);
    defects.f = defects.f(:,1:104);
    cada1td1 = zeros(644,1);
    cada1td1(logical(Gator1Data.Index206(:,cadaforcount6))) = defects.dx(nonzeros(Gator1Data.Index206(:,cadaforcount6)));
    cada1td1(logical(Gator1Data.Index207(:,cadaforcount6))) = cada1f4dx(nonzeros(Gator1Data.Index207(:,cadaforcount6)));
    cada1td1(logical(Gator1Data.Index208(:,cadaforcount6))) = cada1f8dx(nonzeros(Gator1Data.Index208(:,cadaforcount6)));
    defects.dx = cada1td1;
    cada1tempf1 = [defects.f(:,1:Gator1Data.Index209(cadaforcount6)),cada1f4,cada1f8];
    defects.f = zeros(1,112);
    defects.f(:,1:size(cada1tempf1,2)) = cada1tempf1;
    %User Line: defects = [defects, start_states_F1(i,:)-final_states_F1(i-1,:), start_states_F2(i,:)-final_states_F2(i-1,:)];
end
cada1f1dx = start_states_S.dx(1);
cada1f1 = start_states_S.f(1,1);
cada1f2 = size(final_states_F1.f,1);
cada1f3dx = final_states_F1.dx(Gator1Data.Index311);
cada1f3 = final_states_F1.f(cada1f2,1);
cada1td1 = zeros(7,1);
cada1td1(7) = cada1f1dx;
cada1td1(Gator1Data.Index312) = cada1td1(Gator1Data.Index312) + -cada1f3dx;
cada1f4dx = cada1td1;
cada1f4 = cada1f1 - cada1f3;
cada1f5dx = start_states_S.dx(1);
cada1f5 = start_states_S.f(1,1);
cada1f6 = size(final_states_F1.f,1);
cada1f7dx = final_states_F1.dx(Gator1Data.Index313);
cada1f7 = final_states_F1.f(cada1f6,2);
cada1td1 = zeros(5,1);
cada1td1(5) = cada1f5dx;
cada1td1(Gator1Data.Index314) = cada1td1(Gator1Data.Index314) + -cada1f7dx;
cada1f8dx = cada1td1;
cada1f8 = cada1f5 - cada1f7;
cada1td1 = zeros(656,1);
cada1td1(Gator1Data.Index315) = defects.dx;
cada1td1(Gator1Data.Index316) = cada1f4dx;
cada1td1(Gator1Data.Index317) = cada1f8dx;
defects.dx = cada1td1;
defects.f = [defects.f cada1f4 cada1f8];
%User Line: defects = [defects,start_states_S(1,1)-final_states_F1(end,1),start_states_S(1,1)-final_states_F1(end,2)];
cada1f1dx = start_states_S.dx(2);
cada1f1 = start_states_S.f(1,2);
cada1f2 = size(final_states_F1.f,1);
cada1f3dx = final_states_F1.dx(Gator1Data.Index318);
cada1f3 = final_states_F1.f(cada1f2,3);
cada1td1 = zeros(6,1);
cada1td1(6) = cada1f1dx;
cada1td1(Gator1Data.Index319) = cada1td1(Gator1Data.Index319) + -cada1f3dx;
cada1f4dx = cada1td1;
cada1f4 = cada1f1 - cada1f3;
cada1f5dx = start_states_S.dx(2);
cada1f5 = start_states_S.f(1,2);
cada1f6 = size(final_states_F1.f,1);
cada1f7dx = final_states_F1.dx(Gator1Data.Index320);
cada1f7 = final_states_F1.f(cada1f6,4);
cada1td1 = zeros(5,1);
cada1td1(5) = cada1f5dx;
cada1td1(Gator1Data.Index321) = cada1td1(Gator1Data.Index321) + -cada1f7dx;
cada1f8dx = cada1td1;
cada1f8 = cada1f5 - cada1f7;
cada1td1 = zeros(667,1);
cada1td1(Gator1Data.Index322) = defects.dx;
cada1td1(Gator1Data.Index323) = cada1f4dx;
cada1td1(Gator1Data.Index324) = cada1f8dx;
defects.dx = cada1td1;
defects.f = [defects.f cada1f4 cada1f8];
%User Line: defects = [defects,start_states_S(1,2)-final_states_F1(end,3),start_states_S(1,2)-final_states_F1(end,4)];
cadaforvar7.f = 2:1:nNodesS;
%User Line: cadaforvar7 = [2:1:nNodesS];
cada1tempdx = defects.dx;
defects.dx = zeros(707,1);
defects.dx(Gator1Data.Index325,1) = cada1tempdx;
defects.f(1,124) = 0;
for cadaforcount7 = 1:4
    i.f = cadaforvar7.f(:,cadaforcount7);
    %User Line: i = cadaforvar7(:,cadaforcount7);
    cada1td1 = zeros(8,1);
    cada1td1(logical(Gator1Data.Index210(:,cadaforcount7))) = start_states_S.dx(nonzeros(Gator1Data.Index210(:,cadaforcount7)));
    cada1f1dx = cada1td1;
    cada1f1 = start_states_S.f(i.f,:);
    cada1f2 = i.f - 1;
    cada1td1 = zeros(26,1);
    cada1td1(logical(Gator1Data.Index211(:,cadaforcount7))) = final_states_S.dx(nonzeros(Gator1Data.Index211(:,cadaforcount7)));
    cada1f3dx = cada1td1;
    cada1f3 = final_states_S.f(cada1f2,:);
    cada1td1 = zeros(28,1);
    cada1td1(Gator1Data.Index326) = cada1f1dx;
    cada1td1(Gator1Data.Index327) = cada1td1(Gator1Data.Index327) + -cada1f3dx;
    cada1f4dx = cada1td1;
    cada1f4 = cada1f1 - cada1f3;
    defects.dx = defects.dx(Gator1Data.Index328,1);
    defects.f = defects.f(:,1:122);
    cada1td1 = zeros(707,1);
    cada1td1(logical(Gator1Data.Index212(:,cadaforcount7))) = defects.dx(nonzeros(Gator1Data.Index212(:,cadaforcount7)));
    cada1td1(logical(Gator1Data.Index213(:,cadaforcount7))) = cada1f4dx(nonzeros(Gator1Data.Index213(:,cadaforcount7)));
    defects.dx = cada1td1;
    cada1tempf1 = [defects.f(:,1:Gator1Data.Index214(cadaforcount7)),cada1f4];
    defects.f = zeros(1,124);
    defects.f(:,1:size(cada1tempf1,2)) = cada1tempf1;
    %User Line: defects = [defects, start_states_S(i,:)-final_states_S(i-1,:)];
end
cada1f1dx = start_states_F2.dx(1);
cada1f1 = start_states_F2.f(1,1);
cada1f2 = size(final_states_S.f,1);
cada1f3dx = final_states_S.dx(Gator1Data.Index329);
cada1f3 = final_states_S.f(cada1f2,1);
cada1td1 = zeros(5,1);
cada1td1(5) = cada1f1dx;
cada1td1(Gator1Data.Index330) = cada1td1(Gator1Data.Index330) + -cada1f3dx;
cada1f4dx = cada1td1;
cada1f4 = cada1f1 - cada1f3;
cada1f5dx = start_states_F2.dx(2);
cada1f5 = start_states_F2.f(1,2);
cada1f6 = size(final_states_S.f,1);
cada1f7dx = final_states_S.dx(Gator1Data.Index331);
cada1f7 = final_states_S.f(cada1f6,1);
cada1td1 = zeros(5,1);
cada1td1(5) = cada1f5dx;
cada1td1(Gator1Data.Index332) = cada1td1(Gator1Data.Index332) + -cada1f7dx;
cada1f8dx = cada1td1;
cada1f8 = cada1f5 - cada1f7;
cada1td1 = zeros(717,1);
cada1td1(Gator1Data.Index333) = defects.dx;
cada1td1(Gator1Data.Index334) = cada1f4dx;
cada1td1(Gator1Data.Index335) = cada1f8dx;
defects.dx = cada1td1;
defects.f = [defects.f cada1f4 cada1f8];
%User Line: defects = [defects,start_states_F2(1,1)-final_states_S(end,1),start_states_F2(1,2)-final_states_S(end,1)];
cada1f1 = size(final_states_S.f,1);
cada1f2dx = final_states_S.dx(Gator1Data.Index336);
cada1f2 = final_states_S.f(cada1f1,2);
cada1f3dx = start_states_F2.dx(3);
cada1f3 = start_states_F2.f(1,3);
cada1td1 = zeros(5,1);
cada1td1(Gator1Data.Index337) = cada1f2dx;
cada1td1(5) = cada1td1(5) + -cada1f3dx;
cada1f4dx = cada1td1;
cada1f4 = cada1f2 - cada1f3;
cada1f5 = size(final_states_S.f,1);
cada1f6dx = final_states_S.dx(Gator1Data.Index338);
cada1f6 = final_states_S.f(cada1f5,2);
cada1f7dx = start_states_F2.dx(4);
cada1f7 = start_states_F2.f(1,4);
cada1td1 = zeros(5,1);
cada1td1(Gator1Data.Index339) = cada1f6dx;
cada1td1(5) = cada1td1(5) + -cada1f7dx;
cada1f8dx = cada1td1;
cada1f8 = cada1f6 - cada1f7;
cada1td1 = zeros(727,1);
cada1td1(Gator1Data.Index340) = defects.dx;
cada1td1(Gator1Data.Index341) = cada1f4dx;
cada1td1(Gator1Data.Index342) = cada1f8dx;
defects.dx = cada1td1;
defects.f = [defects.f cada1f4 cada1f8];
%User Line: defects = [defects,final_states_S(end,2)-start_states_F2(1,3),final_states_S(end,2)-start_states_F2(1,4)];
%User Line: %% length constraints
temp1.f = [];
%User Line: temp1=[];
cada1f1dx = traj_F1.dx(Gator1Data.Index343);
cada1f1 = traj_F1.f(:,1);
cada1f2dx = cada1f1dx;
cada1f2 = cada1f1.';
cada1f3dx = -cada1f2dx;
cada1f3 = uminus(cada1f2);
cada1f4dx = traj_F1.dx(Gator1Data.Index344);
cada1f4 = traj_F1.f(:,2);
cada1f5dx = cada1f4dx;
cada1f5 = cada1f4.';
cada1td1 = zeros(8940,1);
cada1td1(Gator1Data.Index345) = cada1f3dx;
cada1td1(Gator1Data.Index346) = cada1td1(Gator1Data.Index346) + cada1f5dx;
cada1f6dx = cada1td1;
cada1f6 = cada1f3 + cada1f5;
cada1f7dx = traj_F2.dx(Gator1Data.Index347);
cada1f7 = traj_F2.f(:,1);
cada1f8dx = cada1f7dx;
cada1f8 = cada1f7.';
cada1f9dx = -cada1f8dx;
cada1f9 = uminus(cada1f8);
cada1f10dx = traj_F2.dx(Gator1Data.Index348);
cada1f10 = traj_F2.f(:,2);
cada1f11dx = cada1f10dx;
cada1f11 = cada1f10.';
cada1td1 = zeros(8940,1);
cada1td1(Gator1Data.Index349) = cada1f9dx;
cada1td1(Gator1Data.Index350) = cada1td1(Gator1Data.Index350) + cada1f11dx;
cada1f12dx = cada1td1;
cada1f12 = cada1f9 + cada1f11;
cada1td1 = zeros(17880,1);
cada1td1(Gator1Data.Index351) = cada1f6dx;
cada1td1(Gator1Data.Index352) = cada1f12dx;
temp1.dx = cada1td1;
temp1.f = [temp1.f cada1f6 cada1f12];
%User Line: temp1=[temp1,-traj_F1(:,1)'+traj_F1(:,2)',-traj_F2(:,1)'+traj_F2(:,2)'];
cada1f1dx = traj_S.dx(Gator1Data.Index353);
cada1f1 = traj_S.f(:,1);
cada1f2dx = cada1f1dx;
cada1f2 = cada1f1.';
cada1f3dx = -cada1f2dx;
cada1f3 = uminus(cada1f2);
cada1f4dx = cada1f3dx;
cada1f4 = cada1f3 + lmin;
cada1f5dx = traj_S.dx(Gator1Data.Index354);
cada1f5 = traj_S.f(:,1);
cada1f6dx = cada1f5dx;
cada1f6 = cada1f5.';
cada1f7dx = cada1f6dx;
cada1f7 = cada1f6 - lmax;
cada1td1 = zeros(21850,1);
cada1td1(Gator1Data.Index355) = temp1.dx;
cada1td1(Gator1Data.Index356) = cada1f4dx;
cada1td1(Gator1Data.Index357) = cada1f7dx;
temp1.dx = cada1td1;
temp1.f = [temp1.f cada1f4 cada1f7];
%User Line: temp1=[temp1,-traj_S(:,1)'+lmin,traj_S(:,1)'-lmax];
%User Line: % for i=1:1:nNodesF1
%User Line: %     temp1=[temp1,-traj_F1(i,:,1)+traj_F1(i,:,2),-traj_F2(i,:,1)+traj_F2(i,:,2)];%q-l>0, m1 and m2 must be above the ground
%User Line: % end
%User Line: % for i=1:1:nNodesS
%User Line: %     temp1=[temp1,-traj_S(i,:,1)+lmin,traj_S(i,:,1)-lmax];%z>lmin%z<lmax, z is bounded between lmin and lmax when on the ground
%User Line: % end
%User Line: %% GRF
grf.f = [];
%User Line: grf=[];
cadaforvar8.f = 1:1:nNodesS;
%User Line: cadaforvar8 = 1:1:nNodesS;
grf.dx = zeros(1990,1);
grf.f(1,500) = 0;
for cadaforcount8 = 1:5
    i.f = cadaforvar8.f(:,cadaforcount8);
    %User Line: i = cadaforvar8(:,cadaforcount8);
    cadaforvar9.f =  1:1:100;
    %User Line: cadaforvar9 = 1:1:100;
    cada1forindex1 = Gator1Data.Index215(:,cadaforcount8);
    cada1forindex2 = reshape(Gator1Data.Index216(:,cadaforcount8),16,100);
    cada1forindex3 = reshape(Gator1Data.Index217(:,cadaforcount8),1990,100);
    cada1forindex4 = reshape(Gator1Data.Index218(:,cadaforcount8),1990,100);
    cada1forindex5 = reshape(Gator1Data.Index219(:,cadaforcount8),1,100);
    for cadaforcount9 = 1:100
        j.f = cadaforvar9.f(:,cadaforcount9);
        %User Line: j = cadaforvar9(:,cadaforcount9);
        cada1td1 = zeros(5,1);
        cada1td1(logical(cada1forindex1)) = traj2.dx(nonzeros(cada1forindex1));
        cada1f1dx = cada1td1;
        cada1f1 = traj2.f(3,i.f);
        cada1f2 = i.f - 1;
        cada1f4 = cada1f2*100;
        cada1f5 = cada1f4 + j.f;
        cada1td1 = zeros(16,1);
        cada1td1(logical(cada1forindex2(:,cadaforcount9))) = traj_S.dx(nonzeros(cada1forindex2(:,cadaforcount9)));
        cada1f6dx = cada1td1;
        cada1f6 = traj_S.f(cada1f5,1);
        cada1f7dx = 500.*cada1f6dx;
        cada1f7 = cada1f6*500;
        cada1td1 = zeros(16,1);
        cada1td1(Gator1Data.Index358) = cada1f1dx;
        cada1td1 = cada1td1 + -cada1f7dx;
        cada1f8dx = cada1td1;
        cada1f8 = cada1f1 - cada1f7;
        cada1f9dx = cada1f8dx;
        cada1f9 = cada1f8 + 626.9;
        grf.dx = grf.dx(Gator1Data.Index359,1);
        grf.f = grf.f(:,1:499);
        cada1td1 = zeros(1990,1);
        cada1td1(logical(cada1forindex3(:,cadaforcount9))) = grf.dx(nonzeros(cada1forindex3(:,cadaforcount9)));
        cada1td1(logical(cada1forindex4(:,cadaforcount9))) = cada1f9dx(nonzeros(cada1forindex4(:,cadaforcount9)));
        grf.dx = cada1td1;
        cada1tempf1 = [grf.f(:,1:cada1forindex5(cadaforcount9)),cada1f9];
        grf.f = zeros(1,500);
        grf.f(:,1:size(cada1tempf1,2)) = cada1tempf1;
        %User Line: grf=[grf,traj2(3,i)-traj_S((i-1)*100+j,1).*5.0e2+6.269e2];
        %User Line: %grf=[grf,get_grfs([traj_S(i,j,1),traj_S(i,j,2)]',traj2(3,i))];% Stance GRF, when on the ground the ground must exert a force on the foot (+ force, must never go neg)
    end
end
%User Line: %% initial and final conditions
cada1f1 = [q_0 dq_0];
cada1f2dx = start_states_F1.dx(Gator1Data.Index360);
cada1f2 = start_states_F1.f(1,:);
pogo_Init.dx = -cada1f2dx;
pogo_Init.f = cada1f1 - cada1f2;
%User Line: pogo_Init = [q_0,dq_0]-start_states_F1(1,:);
cada1f1 = [q_0 dq_0];
cada1f2 = size(final_states_F2.f,1);
cada1f3dx = final_states_F2.dx(Gator1Data.Index361);
cada1f3 = final_states_F2.f(cada1f2,:);
pogo_Final.dx = -cada1f3dx;
pogo_Final.f = cada1f1 - cada1f3;
%User Line: pogo_Final = [q_0,dq_0]-final_states_F2(end,:);
%User Line: %% switching surface 1
cada1f1 = size(final_states_F1.f,1);
cada1f2dx = final_states_F1.dx(Gator1Data.Index362);
cada1f2 = final_states_F1.f(cada1f1,1);
cada1f3 = size(final_states_F1.f,1);
cada1f4dx = final_states_F1.dx(Gator1Data.Index363);
cada1f4 = final_states_F1.f(cada1f3,2);
cada1td1 = cada1f2dx;
cada1td1(Gator1Data.Index364) = cada1td1(Gator1Data.Index364) + -cada1f4dx;
touch_down_pos.dx = cada1td1;
touch_down_pos.f = cada1f2 - cada1f4;
%User Line: touch_down_pos=final_states_F1(end,1)-final_states_F1(end,2);
%User Line: %% switching surface 2
cada1f1dx = start_states_F2.dx(1);
cada1f1 = start_states_F2.f(1,1);
cada1f2dx = start_states_F2.dx(2);
cada1f2 = start_states_F2.f(1,2);
cada1td1 = zeros(2,1);
cada1td1(1) = cada1f1dx;
cada1td1(2) = cada1td1(2) + -cada1f2dx;
lift_off_pos.dx = cada1td1;
lift_off_pos.f = cada1f1 - cada1f2;
%User Line: lift_off_pos=start_states_F2(1,1)-start_states_F2(1,2);
%User Line: %% ground equalities and inequalities
cada1f1 = length(grf.f);
cada1f2 = cada1f1 - 1;
cada1f3 = 1:cada1f2;
cada1f4dx = grf.dx(Gator1Data.Index365);
cada1f4 = grf.f(cada1f3);
cada1f5dx = -cada1f4dx;
cada1f5 = uminus(cada1f4);
cada1td1 = zeros(23836,1);
cada1td1(Gator1Data.Index366) = temp1.dx;
cada1td1(Gator1Data.Index367) = cada1f5dx;
c.dx = cada1td1;
c.f = [temp1.f cada1f5];
%User Line: c = [temp1,-grf(1:end-1)];
cada1f1 = length(grf.f);
cada1f2dx = grf.dx(Gator1Data.Index368);
cada1f2 = grf.f(cada1f1);
cada1td1 = zeros(762,1);
cada1td1(Gator1Data.Index369) = defects.dx;
cada1td1(Gator1Data.Index370) = pogo_Init.dx;
cada1td1(Gator1Data.Index371) = pogo_Final.dx;
cada1td1(Gator1Data.Index372) = touch_down_pos.dx;
cada1td1(Gator1Data.Index373) = lift_off_pos.dx;
cada1td1(Gator1Data.Index374) = cada1f2dx;
ceq.dx = cada1td1;
ceq.f = [defects.f pogo_Init.f pogo_Final.f touch_down_pos.f lift_off_pos.f cada1f2];
%User Line: ceq = [defects,pogo_Init,pogo_Final,touch_down_pos,lift_off_pos,grf(end)];
c.dx_size = [4499,168];
c.dx_location = Gator1Data.Index375;
ceq.dx_size = [139,168];
ceq.dx_location = Gator1Data.Index376;
end
function ddq = ADiGator_get_ddq(in1,F)
global ADiGator_pogo_nonlcon_ADiGatorGrd
Gator1Data = ADiGator_pogo_nonlcon_ADiGatorGrd.ADiGator_get_ddq.Gator1Data;
% ADiGator Start Derivative Computations
%User Line: %GET_DDQ
%User Line: %    DDQ = GET_DDQ(IN1,F)
%User Line: %    This function was generated by the Symbolic Math Toolbox version 6.2.
%User Line: %    09-May-2016 16:08:10
l.dx = in1.dx(Gator1Data.Index1);
l.f = in1.f(2,:);
%User Line: l = in1(2,:);
cada1f1dx = -0.1.*F.dx;
cada1f1 = F.f*-0.1;
cada1f2dx = 50.*l.dx;
cada1f2 = l.f*50;
cada1td1 = zeros(92,1);
cada1td1(Gator1Data.Index2) = cada1f1dx;
cada1td1 = cada1td1 + cada1f2dx;
cada1f3dx = cada1td1;
cada1f3 = cada1f1 + cada1f2;
cada1f4dx = cada1f3dx;
cada1f4 = cada1f3 - 82.31;
cada1f5dx = -1.1.*F.dx;
cada1f5 = F.f*-1.1;
cada1f6dx = 550.*l.dx;
cada1f6 = l.f*550;
cada1td1 = zeros(92,1);
cada1td1(Gator1Data.Index3) = cada1f5dx;
cada1td1 = cada1td1 + cada1f6dx;
cada1f7dx = cada1td1;
cada1f7 = cada1f5 + cada1f6;
cada1f8dx = cada1f7dx;
cada1f8 = cada1f7 - 797.5;
cada1td1 = zeros(184,1);
cada1td1(Gator1Data.Index4) = cada1f4dx;
cada1td1(Gator1Data.Index5) = cada1f8dx;
ddq.dx = cada1td1;
ddq.f = [cada1f4;cada1f8];
%User Line: ddq = [F.*(-1.0./1.0e1)+l.*5.0e1-8.231e1;F.*(-1.1e1./1.0e1)+l.*5.5e2-7.975e2];
end
function ddq = ADiGator_get_ddqs(in1,F)
global ADiGator_pogo_nonlcon_ADiGatorGrd
Gator1Data = ADiGator_pogo_nonlcon_ADiGatorGrd.ADiGator_get_ddqs.Gator1Data;
% ADiGator Start Derivative Computations
%User Line: %GET_DDQS
%User Line: %    DDQ = GET_DDQS(IN1,F)
%User Line: %    This function was generated by the Symbolic Math Toolbox version 6.2.
%User Line: %    09-May-2016 16:08:08
z.dx = in1.dx(Gator1Data.Index1);
z.f = in1.f(1,:);
%User Line: z = in1(1,:);
cada1f1dx = 0.1.*F.dx;
cada1f1 = F.f*0.1;
cada1f2dx = 50.*z.dx;
cada1f2 = z.f*50;
cada1td1 = zeros(16,1);
cada1td1(Gator1Data.Index2) = cada1f1dx;
cada1td1 = cada1td1 + -cada1f2dx;
cada1f3dx = cada1td1;
cada1f3 = cada1f1 - cada1f2;
ddq.dx = cada1f3dx;
ddq.f = cada1f3 + 62.69;
%User Line: ddq = F.*(1.0./1.0e1)-z.*5.0e1+6.269e1;
end


function ADiGator_LoadData()
global ADiGator_pogo_nonlcon_ADiGatorGrd
ADiGator_pogo_nonlcon_ADiGatorGrd = load('pogo_nonlcon_ADiGatorGrd.mat');
return
end